function gMLC=step_exploitation(gMLC)
% gMLC class step_exploitation method
%
%	Copyright (C) 2019 Guy Cornejo Maceda (gy.cornejo.maceda@gmail.com)

%% Parameters
    VERBOSE = gMLC.parameters.verbose;
    cycle = gMLC.history.cycle;
    exploitation = gMLC.parameters.exploitation;
    external_interpolation = gMLC.parameters.external_interpolation;

    if VERBOSE > 0, fprintf('######### EXPLOITATION ##########\n'),end
%% Exploitation type
    % Exploitation type
      switch exploitation
      case 'Downhill Simplex'
        if external_interpolation
                gMLC.simplex.numerical_DS(gMLC.table,gMLC.parameters);
            return
        else
            gMLC.simplex.downhill_simplex(gMLC.table,gMLC.parameters);
        end
      case 'none'
        gMLC.simplex.status.last_operation = 'no exploitation';
        if VERBOSE > 0, fprintf(' No exploitation\n'),end
      otherwise
        error('Exploitation error')
      end

    % Evaluate
    % gMLC.simplex.evaluate(gMLC.table,gMLC.parameters);

    % Update simplex (from waiting_room)
    labels=gMLC.simplex.update(gMLC.table,gMLC.parameters);

    % LGP subsitute (if type 'coef DS' -> type 'interpolated')
%     gMLC.simplex.substitute_LGP(gMLC.table,gMLC.parameters);
% It is not longer done here. If we need a matrix for an individual it is
% computed where it is need. In this case "step evolution".

    % Update history
    switch gMLC.simplex.status.last_operation
        case 'centroid'
            fact_type = 10;
        case 'reflect'
            fact_type = 11;
        case 'single contraction'
            fact_type = 12;
        case 'expand'
            fact_type = 13;
        case 'shrink'
            fact_type = 14;
        case 'no exploitation'
            fact_type = Inf;
        case 'external' % external evaluation
            if VERBOSE > 0, fprintf(' Exploitation will be carried after the evaluation\n'),end
            if VERBOSE > 0, fprintf('###### END OF EXPLOITATION ######\n'),end
            if VERBOSE > 0, fprintf('\n'),end
            return
        otherwise
            error('Wrong type of operation in step_exploitation');
    end

    if not(isinf(fact_type))
      gMLC.history.add_fact(gMLC.parameters,fact_type,labels);
    end

%% End
    if VERBOSE > 0, fprintf('###### END OF EXPLOITATION ######\n'),end
    if VERBOSE > 0, fprintf('\n'),end

end %method
